import cv2
import numpy as np
import torch
import matplotlib.pyplot as plt
def fft_visual(imgs, save_path='gt.png'):
    """
    对图像进行傅里叶变换并可保存结果
    """
    ress = []
    for i, img in enumerate(imgs):
        if isinstance(img, np.ndarray):
            # 输入为NumPy数组
            f = np.fft.fft2(img)
            fshift = np.fft.fftshift(f)
            res = np.log(np.abs(fshift))
        elif isinstance(img, torch.Tensor):
            # 输入为张量（Tensor)
            f = torch.fft.fft2(img)
            fshift = torch.fft.fftshift(f)
            res = torch.log(torch.abs(fshift))
            img = img.squeeze(0).permute(1,2,0).detach().cpu().numpy()
            res = res.squeeze(0).permute(1,2,0).detach().cpu().numpy()
        else:
            raise ValueError("Unsupported input type. Only NumPy arrays and Tensors are supported.")
        # return res
        ress.append(res)
        # 展示结果
        plt.subplot(int(f'15{2*i+1}')), plt.imshow(img), plt.title('Original Image')
        plt.axis('off')
        plt.subplot(int(f'15{2*i+2}')), plt.imshow(res), plt.title('Fourier Image')
        plt.axis('off')
    print(ress[1])
    print(ress[1]-ress[0])
    plt.subplot(int(155)), plt.imshow(abs(ress[1]-ress[0])), plt.title('Res FRQ Image')
    plt.axis('off')
    plt.savefig(save_path)

def amp_visual(imgs, save_path='amp.png'):
    l = len(imgs)
    for i, img in enumerate(imgs):
        image = cv2.imread(img)
        grayscale = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
        fft=np.fft.fft2(grayscale)
        print('fft.shape:', fft)
        fft_shift = np.fft.fftshift(fft)
        amplitude = np.log(np.abs(fft_shift)+1)
        phase = np.angle(fft_shift)
        # 展示结果
        plt.subplot(int(f'{l}3{3*i+1}')), plt.imshow(image), plt.title('Original Image')
        plt.axis('off')
        plt.subplot(int(f'{l}3{3*i+2}')), plt.imshow(amplitude), plt.title('amplitude Image')
        plt.axis('off')
        plt.subplot(int(f'{l}3{3*i+3}')), plt.imshow(phase), plt.title('phase Image')
        plt.axis('off')
    # plt.subplot(int(155)), plt.imshow(abs(ress[1]-ress[0])), plt.title('Res FRQ Image')
    plt.axis('off')
    plt.savefig(save_path)

def exchange_visual(img1, img2, save_path='exchange.png'):
    import copy
    img1 = cv2.imread(img1, 1)
    img2 = cv2.imread(img2, 1)
    _img1 = copy.deepcopy(img1)
    _img2 = copy.deepcopy(img2)
    for i in range(3):
        fft_1=np.fft.fft2(img1[i])
        fft_2=np.fft.fft2(img2[i])

        fft_1_amp = np.abs(fft_1)
        fft_1_pha = np.angle(fft_1)

        fft_2_amp = np.abs(fft_2)
        fft_2_pha = np.angle(fft_2)

        _img1[i] = np.uint8(np.fft.ifft2(fft_1_amp*np.cos(fft_2_pha)+fft_1_amp*np.sin(fft_2_pha)*1j))
        _img2[i] = np.uint8(np.fft.ifft2(fft_2_amp*np.cos(fft_1_pha)+fft_2_amp*np.sin(fft_1_pha)*1j))
    print(_img1-img1)
    plt.subplot(int(221)), plt.imshow(img1), plt.title('Original Image')
    plt.subplot(int(222)), plt.imshow(_img1), plt.title('exchange Image')
    plt.subplot(int(223)), plt.imshow(img2), plt.title('Original Image')
    plt.subplot(int(224)), plt.imshow(_img2), plt.title('exchange Image')
    plt.axis('off')
    plt.savefig(save_path)

blur_path = '/data/vjuicefs_ai_camera_llm/11165663/datasets/gopro/test/GOPR0384_11_00/sharp/000001.png'
gt_path = '/data/vjuicefs_ai_camera_llm/11165663/datasets/gopro/test/GOPR0384_11_00/blur/000001.png'

# imgs = [cv2.imread(blur_path, -1), cv2.imread(gt_path, -1)]
# fft_visual(imgs, save_path='blur_gt.png')

# amp_visual([blur_path, gt_path], save_path='blur_gt_amp.png')

exchange_visual(blur_path, gt_path, save_path='blur_gt_exchange.png')
